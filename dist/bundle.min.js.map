{"version":3,"sources":["webpack://IRISWorm/webpack/universalModuleDefinition","webpack://IRISWorm/webpack/bootstrap","webpack://IRISWorm/./src/_entry.js","webpack://IRISWorm/./src/iris.worm.js","webpack://IRISWorm/./src/event-emitter.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_iris","Worm","WORM","_eventEmitter","div","options","arguments","length","undefined","_classCallCheck","this","_rootDiv","_options","assign","DEFAULT_OPTIONS","_canvas","document","createElement","width","height","className","CSS_CONTAINER","_ctx","getContext","appendChild","_value","_metaValue","_oldMetaValue","_momentum","_active","accessibilityBroadcast","_fallbackDom","setAttribute","EventEmitter","maxValue","smoothMode","colorMode","acceleration","lineWidth","_draw","requestAnimationFrame","_moveViewport","_drawPoint","_resolveValues","distanceToValue","Math","abs","MAX_MOMENTUM","imageData","getImageData","putImageData","clearRect","color","colorUnit","bad","floor","_scaleValue","good","strokeStyle","beginPath","moveTo","lineTo","stroke","scale","NAME","VERSION","indexOf","remove","eventName","callback","self","on","a","b","newValue","innerText","emit","optionName","optionValue","logger","_events","push","arg1","arg2","arg3","forEach","fn"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"IRISWorm\"] = factory();\n\telse\n\t\troot[\"IRISWorm\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import WORM from './iris.worm';\n\nexport const Worm = WORM;","import EventEmitter from './event-emitter';\n\nexport default class Worm {\n\n  get NAME() {\n    'IRIS Worm'\n  };\n  get VERSION() {\n    return null\n  } // TODO\n  get CSS_CONTAINER() {\n    return 'irisWorm'\n  };\n  get MAX_MOMENTUM() {\n    return 5\n  };\n\n  static get DEFAULT_OPTIONS() {\n    return {\n      // The width of the component\n      width: 600,\n\n      // The height of the component\n      height: 400,\n\n      // The maximum value that can be set in the component (used for scaling) -\n      // defaults to 100, meaning that \"100\" is the \"Top of the worm\".\n      maxValue: 100,\n\n      // When a value changes, the worm will accelerate towards that value smoothly\n      // if smoothMode is set to true, otherwise it will jump straight to it.\n      smoothMode: true,\n\n      // Color mode: options are: 'greenIsGood', 'greenIsBad', 'monochrome'\n      colorMode: 'greenIsGood',\n\n      // How quickly the worm accelerates towards its target (NOTE: this value really is only useful if you keep it\n      // below 1, otherwise you might as well just use smoothMode: false and have it instantly jumping)\n      acceleration: 0.1,\n\n      // How thick the line is\n      lineWidth: 5,\n\n      //how insistant the aria-live tag is. Default is polite;\n      //options are: off, polite, assertive\n      accessibilityBroadcast: 'polite'\n    }\n  };\n\n  /**\n   * Constructs a new IRIS Worm instance.\n   * @class IRIS.Worm\n   * @constructor Worm\n   * @example\n   *      new IRIS.Worm(div, options);\n   * @param {HTMLDivElement} div the div in which the visualisation will be rendered, e.g. '#map'\n   * @param options visualisation options (see 'options' property)\n   */\n  constructor(div, options = {}) {\n    this._rootDiv = div;\n    this._options = Object.assign({}, Worm.DEFAULT_OPTIONS, options);\n\n    // create canvas and context\n    this._canvas = document.createElement('canvas');\n    this._canvas.width = this._options.width;\n    this._canvas.height = this._options.height;\n    this._canvas.className = this.CSS_CONTAINER;\n    this._ctx = this._canvas.getContext('2d');\n    this._rootDiv.appendChild(this._canvas);\n\n    this._value = 50;\n    this._metaValue = 50;\n    this._oldMetaValue = 50;\n    this._momentum = 0.0;\n    this._active = false;\n\n    //create fallback DOM and add aria roles if the accessibilityBroadcast option isn't disabled\n    if (this._options.accessibilityBroadcast !== 'off') {\n      this._fallbackDom = document.createElement('span');\n      this._fallbackDom.setAttribute('role', 'alert');\n      this._fallbackDom.setAttribute('aria-live', this._options.accessibilityBroadcast);\n      this._fallbackDom.setAttribute('style', 'position:absolute;width:1px;' + '' +\n        'height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0, 0, 0, 0);');\n      this._rootDiv.appendChild(this._fallbackDom);\n    }\n\n    // Events\n    this._eventEmitter = new EventEmitter();\n  }\n\n  start() {\n    this._ctx.lineWidth = this._options.lineWidth;\n    this._active = true;\n    this._draw();\n  }\n\n  stop() {\n    this._active = false;\n  }\n\n  _draw() {\n    if (this._active) {\n      requestAnimationFrame(this._draw.bind(this));\n      this._moveViewport();\n      this._drawPoint();\n      this._resolveValues();\n    }\n  }\n\n  _resolveValues() {\n\n    if (this._options.smoothMode) {\n      var distanceToValue = Math.abs(this._value - this._metaValue);\n\n      if (distanceToValue < 0.1) {\n        this._metaValue = this._value;\n        this._momentum = 0;\n        return;\n      } else {\n        if (this._value < this._metaValue) {\n          if (this._momentum >= -this.MAX_MOMENTUM) {\n            this._momentum -= this._options.acceleration;\n          }\n        }\n        if (this._value > this._metaValue) {\n          if (this._momentum <= this.MAX_MOMENTUM) {\n            this._momentum += this._options.acceleration;\n          }\n        }\n\n        this._metaValue += (this._momentum * distanceToValue) / 100;\n      }\n      this._oldMetaValue = this._metaValue;\n    } else {\n      this._oldMetaValue = this._metaValue;\n      this._metaValue = this._value;\n    }\n\n  }\n\n  _moveViewport() {\n    var imageData = this._ctx.getImageData(1, 0, this._options.width - 1, this._options.height);\n    this._ctx.putImageData(imageData, 0, 0);\n    this._ctx.clearRect(this._options.width - 1, 0, 1, this._options.height);\n\n    // this thing is known to be leaky so let's force explicit garbage collecion.\n    imageData = null;\n  }\n\n  _drawPoint() {\n\n    var colorUnit = (255 / this._options.height);\n    var bad = Math.floor(colorUnit * this._scaleValue(this._metaValue));\n    var good = 255 - Math.floor(colorUnit * this._scaleValue(this._metaValue));\n    var color;\n\n    switch (this._options.colorMode) {\n      case 'monochrome':\n        color = 'rgb(0,0,0)';\n        break;\n      case 'greenIsBad':\n        color = 'rgb(' + good + ',' + bad + ',0)';\n        break;\n      case 'greenIsGood':\n      default:\n        color = 'rgb(' + bad + ',' + good + ',0)';\n    }\n\n    this._ctx.strokeStyle = color;\n\n    this._ctx.beginPath();\n    this._ctx.moveTo(this._options.width, this._scaleValue(this._metaValue));\n    this._ctx.lineTo(this._options.width - 1, this._scaleValue(this._oldMetaValue));\n    this._ctx.stroke();\n  }\n\n  _scaleValue(value) {\n    var scale = this._options.height / this._options.maxValue;\n\n\n    return this._options.height - (value * scale);\n  }\n\n  /**\n   * Returns the name (and version, if available) of this widget.\n   *\n   * @private\n   * @method _getName\n   * @returns {string} name (and version, if available) of this widget\n   */\n  _getName() {\n    var name = this.NAME;\n    // if we appear to have a version\n    if (this.VERSION.indexOf('<%=') !== 0) {\n      name = this.NAME + ' ' + this.VERSION;\n    }\n    return name;\n  }\n\n  /**\n   * Deconstructor\n   *\n   * @public\n   * @method destroy\n   */\n  destroy() {\n    if (typeof this._canvas !== 'undefined' && this._canvas != null) {\n      this._canvas.remove();\n      delete this._canvas;\n    }\n  }\n\n\n  /**\n   * Hook into a worm event.\n   *\n   * @public\n   * @method on\n   * @param {string} eventName the event to hook into\n   * @param {function} callback the callback to run\n   * @returns {null}\n   */\n  on(eventName, callback) {\n    var self = this;\n    this._eventEmitter.on(eventName, (a, b, c) => callback.call(self, a, b, c));\n  }\n\n\n  /**\n   * Sets the value\n   *\n   * @public\n   * @method setValue\n   * @param {number} optionValue value to set the option to\n   * @returns {null}\n   */\n  setValue(newValue) {\n\n    if (newValue > this._options.maxValue) {\n      newValue = this._options.maxValue;\n    }\n    if (this._options.accessibilityBroadcast !== 'off') {\n      if (this._fallbackDom && this._fallbackDom.remove) {\n        this._fallbackDom.remove();\n        this._fallbackDom.innerText = 'worm value is ' + newValue;\n        this._rootDiv.appendChild(this._fallbackDom);\n      }\n    }\n\n    if (newValue > this._value) {\n      this._eventEmitter.emit('valueIncreased', this._value, newValue);\n    }\n    if (newValue < this._value) {\n      this._eventEmitter.emit('valueDecreased', this._value, newValue);\n    }\n    if (newValue <= 0) {\n      this._eventEmitter.emit('valueBecameMinimum', this._value);\n    }\n    if (newValue >= this._options.maxValue) {\n      this._eventEmitter.emit('valueBecameMaximum', this._value);\n    }\n\n\n    if (newValue <= 0) {\n      this._eventEmitter.emit('valueBecameMinimum', this._value);\n    }\n\n    this._value = newValue;\n    this._momentum = 0;\n    this._eventEmitter.emit('valueChanged', this._value);\n  }\n\n  /**\n   * Gets the value\n   *\n   * @public\n   * @method getValue\n   * @returns {number} the current value\n   */\n  getValue() {\n    return this._value;\n  }\n\n  /**\n   * Sets the value for the specified option.\n   *\n   * @public\n   * @method setOption\n   * @param {string} optionName name of the option to set a value for\n   * @param {object} optionValue value to set the option to\n   * @returns {null}\n   */\n  setOption(optionName, optionValue) {\n    this._options[optionName] = optionValue;\n  }\n\n  /**\n   * Returns the value for the specified option.\n   *\n   * @public\n   * @method getOption\n   * @param {string} optionName name of the option to retrieve a value for\n   * @returns {object} the value of the specified option\n   */\n  getOption(optionName) {\n    return this._options[optionName];\n  }\n\n}\n","export default class EventEmitter {\n\n  constructor(logger) {\n    this._events = {};\n  }\n\n  /**\n   * Sets a listener for the specified event name.\n   *\n   * @public\n   * @method on\n   * @param {string} eventName name of the event to listen to.\n   * @param {function} callback function to call when the event occurs.\n   */\n  on(eventName, callback) {\n    this._events[eventName] = this._events[eventName] || [];\n    this._events[eventName].push(callback);\n  }\n\n  /**\n   * Sets a listener for the specified event name.\n   *\n   * @public\n   * @method emit\n   * @param {string} eventName name of the event to emit.\n   * @param {any} arg1, arg2, arg3 arguments to yield to the functioun\n   */\n  emit(eventName, arg1, arg2, arg3) {\n    (this._events[eventName] || []).forEach((fn) => {\n      fn && fn(arg1, arg2, arg3)\n    });\n  }\n\n}"],"sourceRoot":""}